apiVersion: apps/v1
kind: Deployment
metadata:
  name: redpanda-deployment
  labels:
    app: redpanda
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redpanda
  template:
    metadata:
      labels:
        app: redpanda
    spec:

      initContainers:
        - name: redpanda-configurator
          image: vectorized/redpanda:latest
          command: [ "/bin/sh", "-c" ]
          args:
            - >
              CONFIG=/etc/redpanda/redpanda.yaml;
              NODE_ID=0;
              SERVICE_NAME=redpanda-service.redpanda;
              rpk --config $CONFIG config set redpanda.node_id $NODE_ID;
              if [ "$NODE_ID" = "0" ]; then
                rpk --config $CONFIG config set redpanda.seed_servers '[]' --format yaml;
              fi;
              rpk --config $CONFIG config set redpanda.advertised_rpc_api.address $SERVICE_NAME;
              rpk --config $CONFIG config set redpanda.advertised_kafka_api.address $SERVICE_NAME;
      containers:
        - name: redpanda
          image: vectorized/redpanda:latest
          imagePullPolicy: Always
          ports:
            - name: kafka-tcp
              containerPort: 9092
              protocol: TCP